{"version":3,"sources":["components/header.js","components/soundpanel.js","components/panel.js","apis/panels_api.js","index.js"],"names":["header","react_default","a","createElement","lib","brand","right","Moment","globalMoment","moment","SoundPanel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","interval","state","playing","time","paused","playStopSound","bind","assertThisInitialized","window","eventEmitter","addListener","onEndSound","addTime","resetTime","startTime","pauseTime","pauseToggle","setState","setInterval","clearInterval","console","log","file","panelController","cancel","play","resume","pause","timer","className","dist_default","tz","format","unix","buttons","type","onClick","push","title","shortcut","toUpperCase","actions","name","es","keyName","onKeyUp","concat","Component","Panel","items","waitForPanelControllerIntetral","checkPanelController","panelControllerDidApear","_this2","EventEmitter","axios","get","then","response","data","length","s","offset","size","flashing","map","item","soundpanel","ReactDOM","render","panel","document","querySelector"],"mappings":"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","file":"static/js/main.8cfb7f26.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Row } from 'react-materialize';\n\nexport default () => {\n    return <Row><Navbar brand='ABCVideo' right/></Row>\n}","import React, { Component } from 'react';\nimport { Card } from 'react-materialize';\nimport Hotkeys from 'react-hot-keys';\nimport Moment from 'react-moment';\nimport moment from 'moment-timezone';\n\nMoment.globalMoment = moment;\n\nclass SoundPanel extends Component {\n    interval = null\n\n    constructor(props) {\n        super(props);\n\n        this.state = { playing: false, time: 0, interval: null, paused: false }\n\n        this.playStopSound = this.playStopSound.bind(this)\n        window.eventEmitter.addListener(\"endSound\", this.onEndSound.bind(this))\n\n        this.addTime = this.addTime.bind(this)\n        this.resetTime = this.resetTime.bind(this)\n        this.startTime = this.startTime.bind(this)\n        this.pauseTime = this.pauseTime.bind(this)\n        this.pauseToggle = this.pauseToggle.bind(this)\n    }\n\n    addTime() {\n        this.setState({ time: this.state.time + 1 })\n    }\n\n    startTime() {\n        this.interval = setInterval(this.addTime, 1000)\n    }\n\n    pauseTime() {\n        clearInterval(this.interval)\n    }\n\n    resetTime() {\n        console.log(this.state)\n        this.setState({ time: 0 })\n        clearInterval(this.interval)\n    }\n\n    onEndSound(file) {\n        if (file === this.props.file) {\n            this.setState({ playing: false })\n            this.resetTime()\n        }\n    } \n\n    playStopSound() {\n        if (this.state.playing) {\n            window.panelController.cancel(this.props.file)\n            this.setState({ playing: false })\n            this.resetTime()\n        } else {\n            window.panelController.play(this.props.file)\n            this.setState({ playing: true })\n            this.startTime()\n        }   \n    }\n\n    pauseToggle() {\n        if (!this.state.playing) {\n            return\n        }\n\n        if (this.state.paused) {\n            window.panelController.resume(this.props.file)\n            this.setState({ paused: false })\n            this.startTime()\n        } else {\n            window.panelController.pause(this.props.file)\n            this.setState({ paused: true })\n            this.pauseTime()\n        } \n    }\n\n    render() {\n        let timer = <div className=\"empty-led\"/>\n        if (this.state.playing) {\n            timer = <p className=\"led\"><Moment tz=\"UTC\" format=\"HH:mm:ss\"unix>{this.state.time}</Moment></p>\n        }\n\n        let buttons = [<a type=\"button\" onClick={this.playStopSound}>{this.state.playing ? \"Stop\" : \"Play\"}</a>]\n        if (this.state.playing) {\n            buttons.push(<a type=\"button\" onClick={this.pauseToggle}>{this.state.paused ? \"Resume\" : \"Pause\"}</a>)\n        }\n\n        return <Card className={this.state.playing ? \"deep-orange\" : \"\"}title={this.props.shortcut.toUpperCase()} actions={buttons}>\n            <p>{this.props.name}</p>\n            {timer}\n            <Hotkeys keyName={this.props.shortcut} onKeyUp={this.playStopSound}/>\n            <Hotkeys keyName={`shift+${this.props.shortcut}`} onKeyUp={this.pauseToggle}/>\n        </Card>\n    }\n}\n\nexport default SoundPanel\n","import React, { Component } from 'react';\nimport { Row, Col, Preloader } from 'react-materialize';\nimport { EventEmitter } from 'fbemitter';\nimport { getAllPanels } from '../apis/panels_api'\nimport SoundPanel from './soundpanel'\n\nclass Panel extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = { items: [] }\n        this.waitForPanelControllerIntetral = setInterval(this.checkPanelController.bind(this), 100)\n\n        this.panelControllerDidApear = this.panelControllerDidApear.bind(this)\n    }\n\n    panelControllerDidApear() {\n        window.eventEmitter = new EventEmitter(); // sorry you have to see this but we're fighting webkit here\n        getAllPanels().then((response) => this.setState({ items: response.data }))\n    }\n\n    checkPanelController() {\n        if (window.panelController) {\n            clearInterval(this.waitForPanelControllerIntetral);        \n            this.panelControllerDidApear();\n        }\n    }\n\n    render() {\n        if (this.state.items.length === 0) {\n            return <Row><Col s={4} offset='s6'><Preloader size='big' flashing={true} /></Col></Row>\n        }\n\n        console.log(this.state.items)\n        return <Row>{this.state.items.map((item) => <Col s={2}><SoundPanel {...item}/></Col>)}</Row>\n    }\n\n}\n\nexport default Panel\n","import axios from 'axios';\n\nexport const getAllPanels = () => axios.get(\"/api/panels\")\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Header from './components/header'\r\nimport Panel from './components/panel'\r\n\r\nconst App = function () {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Panel/>\r\n        </div>\r\n    );\r\n};\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector(\"#container\")\r\n);"],"sourceRoot":""}